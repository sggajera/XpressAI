{"ast":null,"code":"var _jsxFileName = \"/Users/sanketgajera/Projects/XpressAI/client/src/components/Dashboard/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Container, Grid, Typography, AppBar, Toolbar, Chip } from '@mui/material';\nimport AccountTracker from './AccountTracker';\nimport TrackedAccountsList from './TrackedAccountsList';\nimport ReplyQueue from './ReplyQueue';\nimport XIcon from '../Icons/XIcon';\nimport Sidebar from './Sidebar';\nimport theme from '../../theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [dbStatus, setDbStatus] = useState('Checking...');\n  const [queuedReplies, setQueuedReplies] = useState([]);\n  useEffect(() => {\n    fetch('/api/test-db').then(res => res.json()).then(data => setDbStatus(data.status)).catch(err => setDbStatus('Database connection failed'));\n  }, []);\n\n  // Load queued replies from approved replies on mount\n  useEffect(() => {\n    const loadQueuedReplies = async () => {\n      try {\n        const response = await fetch('/api/twitter/approved-replies');\n        const data = await response.json();\n        if (data.success) {\n          setQueuedReplies(data.data);\n        }\n      } catch (error) {\n        console.error('Error loading queued replies:', error);\n      }\n    };\n    loadQueuedReplies();\n  }, []);\n  const handleAddToQueue = reply => {\n    setQueuedReplies(prev => [...prev, {\n      id: Date.now(),\n      queuedAt: new Date(),\n      ...reply\n    }]);\n  };\n  const handleRemoveFromQueue = tweetId => {\n    setQueuedReplies(prev => prev.filter(reply => reply.tweetId !== tweetId));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      elevation: 0,\n      sx: {\n        background: 'linear-gradient(45deg, #000000 30%, #2C2C2C 90%)',\n        height: '64px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        sx: {\n          height: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          sx: {\n            fontWeight: 600,\n            letterSpacing: '1px',\n            color: '#E8E8E8',\n            textShadow: '0 2px 4px rgba(0,0,0,0.2)',\n            textTransform: 'uppercase',\n            ml: 1\n          },\n          children: \"Xpress AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      sx: {\n        mt: 4,\n        mb: 4,\n        bgcolor: 'background.default',\n        borderRadius: 2,\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AccountTracker, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 9,\n            children: /*#__PURE__*/_jsxDEV(TrackedAccountsList, {\n              onAddToQueue: handleAddToQueue,\n              onRemoveFromQueue: handleRemoveFromQueue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(ReplyQueue, {\n              queuedReplies: queuedReplies\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"aa+41+ngFCm977Eg3qCw8ZgXWv0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Box","Container","Grid","Typography","AppBar","Toolbar","Chip","AccountTracker","TrackedAccountsList","ReplyQueue","XIcon","Sidebar","theme","jsxDEV","_jsxDEV","Dashboard","_s","dbStatus","setDbStatus","queuedReplies","setQueuedReplies","fetch","then","res","json","data","status","catch","err","loadQueuedReplies","response","success","error","console","handleAddToQueue","reply","prev","id","Date","now","queuedAt","handleRemoveFromQueue","tweetId","filter","sx","flexGrow","children","position","elevation","background","height","display","alignItems","gap","fileName","_jsxFileName","lineNumber","columnNumber","variant","component","fontWeight","letterSpacing","color","textShadow","textTransform","ml","maxWidth","mt","mb","bgcolor","borderRadius","p","container","spacing","item","xs","md","onAddToQueue","onRemoveFromQueue","_c","$RefreshReg$"],"sources":["/Users/sanketgajera/Projects/XpressAI/client/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  Grid,\n  Typography,\n  AppBar,\n  Toolbar,\n  Chip,\n} from '@mui/material';\nimport AccountTracker from './AccountTracker';\nimport TrackedAccountsList from './TrackedAccountsList';\nimport ReplyQueue from './ReplyQueue';\nimport XIcon from '../Icons/XIcon';\nimport Sidebar from './Sidebar';\nimport theme from '../../theme';\n\nconst Dashboard = () => {\n  const [dbStatus, setDbStatus] = useState('Checking...');\n  const [queuedReplies, setQueuedReplies] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/test-db')\n      .then(res => res.json())\n      .then(data => setDbStatus(data.status))\n      .catch(err => setDbStatus('Database connection failed'));\n  }, []);\n\n  // Load queued replies from approved replies on mount\n  useEffect(() => {\n    const loadQueuedReplies = async () => {\n      try {\n        const response = await fetch('/api/twitter/approved-replies');\n        const data = await response.json();\n        if (data.success) {\n          setQueuedReplies(data.data);\n        }\n      } catch (error) {\n        console.error('Error loading queued replies:', error);\n      }\n    };\n\n    loadQueuedReplies();\n  }, []);\n\n  const handleAddToQueue = (reply) => {\n    setQueuedReplies(prev => [...prev, {\n      id: Date.now(),\n      queuedAt: new Date(),\n      ...reply\n    }]);\n  };\n\n  const handleRemoveFromQueue = (tweetId) => {\n    setQueuedReplies(prev => prev.filter(reply => reply.tweetId !== tweetId));\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar \n        position=\"static\" \n        elevation={0}\n        sx={{\n          background: 'linear-gradient(45deg, #000000 30%, #2C2C2C 90%)',\n          height: '64px',\n        }}\n      >\n        <Toolbar \n          sx={{ \n            height: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            gap: 2,\n          }}\n        >\n          <Sidebar />\n          <Typography \n            variant=\"h5\" \n            component=\"div\" \n            sx={{ \n              fontWeight: 600,\n              letterSpacing: '1px',\n              color: '#E8E8E8',\n              textShadow: '0 2px 4px rgba(0,0,0,0.2)',\n              textTransform: 'uppercase',\n              ml: 1,\n            }}\n          >\n            Xpress AI\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Container maxWidth=\"xl\" sx={{ \n        mt: 4, \n        mb: 4,\n        bgcolor: 'background.default',\n        borderRadius: 2,\n        p: 3,\n      }}>\n        <Grid container spacing={3}>\n          {/* Top Row - Account Tracker */}\n          <Grid item xs={12}>\n            <AccountTracker />\n          </Grid>\n\n          {/* Main Content */}\n          <Grid container item spacing={3}>\n            {/* Tracked Accounts List */}\n            <Grid item xs={12} md={9}>\n              <TrackedAccountsList \n                onAddToQueue={handleAddToQueue} \n                onRemoveFromQueue={handleRemoveFromQueue}\n              />\n            </Grid>\n\n            {/* Reply Queue - Always visible */}\n            <Grid item xs={12} md={3}>\n              <ReplyQueue queuedReplies={queuedReplies} />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}