{"ast":null,"code":"var _jsxFileName = \"/Users/sanketgajera/Projects/XpressAI/client/src/components/Dashboard/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Container, Grid, Typography, Paper, AppBar, Toolbar, Chip } from '@mui/material';\nimport ReplyTester from './ReplyTester';\nimport TwitterTester from './TwitterTester';\nimport AccountTracker from './AccountTracker';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [dbStatus, setDbStatus] = useState('Checking...');\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    fetch('/api/test-db').then(res => res.json()).then(data => setDbStatus(data.status)).catch(err => setDbStatus('Database connection failed'));\n  }, []);\n  const createTestUser = async () => {\n    try {\n      const res = await fetch('/api/test-user', {\n        method: 'POST'\n      });\n      const data = await res.json();\n      console.log('Created test user:', data);\n      loadUsers();\n    } catch (err) {\n      console.error('Error creating test user:', err);\n    }\n  };\n  const loadUsers = async () => {\n    try {\n      const res = await fetch('/api/users');\n      const data = await res.json();\n      setUsers(data);\n    } catch (err) {\n      console.error('Error loading users:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      color: \"primary\",\n      elevation: 0,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          sx: {\n            flexGrow: 1\n          },\n          children: \"Express AI Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Chip, {\n          label: `Status: ${dbStatus}`,\n          color: dbStatus.includes('failed') ? 'error' : 'success',\n          sx: {\n            ml: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AccountTracker, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 3,\n              borderRadius: 2,\n              bgcolor: 'background.paper',\n              height: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(ReplyTester, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 3,\n              borderRadius: 2,\n              bgcolor: 'background.paper',\n              height: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(TwitterTester, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"eQMFzJGrZgaL2f0JAKSL8194kNg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Box","Container","Grid","Typography","Paper","AppBar","Toolbar","Chip","ReplyTester","TwitterTester","AccountTracker","jsxDEV","_jsxDEV","Dashboard","_s","dbStatus","setDbStatus","users","setUsers","fetch","then","res","json","data","status","catch","err","createTestUser","method","console","log","loadUsers","error","sx","flexGrow","children","position","color","elevation","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","label","includes","ml","maxWidth","mt","mb","container","spacing","item","xs","md","p","borderRadius","bgcolor","height","_c","$RefreshReg$"],"sources":["/Users/sanketgajera/Projects/XpressAI/client/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  Grid,\n  Typography,\n  Paper,\n  AppBar,\n  Toolbar,\n  Chip,\n} from '@mui/material';\nimport ReplyTester from './ReplyTester';\nimport TwitterTester from './TwitterTester';\nimport AccountTracker from './AccountTracker';\nimport './Dashboard.css';\n\nconst Dashboard = () => {\n  const [dbStatus, setDbStatus] = useState('Checking...');\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/test-db')\n      .then(res => res.json())\n      .then(data => setDbStatus(data.status))\n      .catch(err => setDbStatus('Database connection failed'));\n  }, []);\n\n  const createTestUser = async () => {\n    try {\n      const res = await fetch('/api/test-user', { method: 'POST' });\n      const data = await res.json();\n      console.log('Created test user:', data);\n      loadUsers();\n    } catch (err) {\n      console.error('Error creating test user:', err);\n    }\n  };\n\n  const loadUsers = async () => {\n    try {\n      const res = await fetch('/api/users');\n      const data = await res.json();\n      setUsers(data);\n    } catch (err) {\n      console.error('Error loading users:', err);\n    }\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\" color=\"primary\" elevation={0}>\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Express AI Dashboard\n          </Typography>\n          <Chip \n            label={`Status: ${dbStatus}`}\n            color={dbStatus.includes('failed') ? 'error' : 'success'}\n            sx={{ ml: 2 }}\n          />\n        </Toolbar>\n      </AppBar>\n\n      <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <AccountTracker />\n          </Grid>\n          \n          <Grid item xs={12} md={6}>\n            <Paper \n              sx={{ \n                p: 3, \n                borderRadius: 2,\n                bgcolor: 'background.paper',\n                height: '100%'\n              }}\n            >\n              <ReplyTester />\n            </Paper>\n          </Grid>\n          \n          <Grid item xs={12} md={6}>\n            <Paper \n              sx={{ \n                p: 3, \n                borderRadius: 2,\n                bgcolor: 'background.paper',\n                height: '100%'\n              }}\n            >\n              <TwitterTester />\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}