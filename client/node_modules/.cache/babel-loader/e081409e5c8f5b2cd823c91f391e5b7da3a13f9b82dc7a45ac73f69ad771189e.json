{"ast":null,"code":"var _jsxFileName = \"/Users/sanketgajera/Projects/XpressAI/client/src/components/Dashboard/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Container, Grid, Typography, AppBar, Toolbar, Chip } from '@mui/material';\nimport AccountTracker from './AccountTracker';\nimport TrackedAccountsList from './TrackedAccountsList';\nimport ReplyQueue from './ReplyQueue';\nimport XIcon from '../Icons/XIcon';\nimport Sidebar from './Sidebar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [dbStatus, setDbStatus] = useState('Checking...');\n  const [queuedReplies, setQueuedReplies] = useState([]);\n  useEffect(() => {\n    fetch('/api/test-db').then(res => res.json()).then(data => setDbStatus(data.status)).catch(err => setDbStatus('Database connection failed'));\n  }, []);\n  const handleAddToQueue = reply => {\n    setQueuedReplies(prev => [...prev, {\n      id: Date.now(),\n      queuedAt: new Date(),\n      ...reply\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        color: \"primary\",\n        elevation: 0,\n        sx: {\n          background: 'linear-gradient(45deg, #000000 30%, #2C2C2C 90%)',\n          height: '64px',\n          position: 'relative'\n        },\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          sx: {\n            justifyContent: 'center',\n            height: '100%',\n            position: 'relative'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"div\",\n            sx: {\n              fontWeight: 600,\n              letterSpacing: '1px',\n              color: '#E8E8E8',\n              textShadow: '0 2px 4px rgba(0,0,0,0.2)',\n              textTransform: 'uppercase'\n            },\n            children: \"Xpress AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"xl\",\n        sx: {\n          mt: 4,\n          mb: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(AccountTracker, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 9,\n              children: /*#__PURE__*/_jsxDEV(TrackedAccountsList, {\n                onAddToQueue: handleAddToQueue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(ReplyQueue, {\n                queuedReplies: queuedReplies\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Dashboard, \"qoE5Zqj0GcI4nEyI15IBmH4GqIc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Box","Container","Grid","Typography","AppBar","Toolbar","Chip","AccountTracker","TrackedAccountsList","ReplyQueue","XIcon","Sidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","dbStatus","setDbStatus","queuedReplies","setQueuedReplies","fetch","then","res","json","data","status","catch","err","handleAddToQueue","reply","prev","id","Date","now","queuedAt","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","flexGrow","position","color","elevation","background","height","justifyContent","variant","component","fontWeight","letterSpacing","textShadow","textTransform","maxWidth","mt","mb","container","spacing","item","xs","md","onAddToQueue","_c","$RefreshReg$"],"sources":["/Users/sanketgajera/Projects/XpressAI/client/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  Grid,\n  Typography,\n  AppBar,\n  Toolbar,\n  Chip,\n} from '@mui/material';\nimport AccountTracker from './AccountTracker';\nimport TrackedAccountsList from './TrackedAccountsList';\nimport ReplyQueue from './ReplyQueue';\nimport XIcon from '../Icons/XIcon';\nimport Sidebar from './Sidebar';\n\nconst Dashboard = () => {\n  const [dbStatus, setDbStatus] = useState('Checking...');\n  const [queuedReplies, setQueuedReplies] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/test-db')\n      .then(res => res.json())\n      .then(data => setDbStatus(data.status))\n      .catch(err => setDbStatus('Database connection failed'));\n  }, []);\n\n  const handleAddToQueue = (reply) => {\n    setQueuedReplies(prev => [...prev, {\n      id: Date.now(),\n      queuedAt: new Date(),\n      ...reply\n    }]);\n  };\n\n  return (\n    <>\n      <Sidebar />\n      <Box sx={{ flexGrow: 1 }}>\n        <AppBar \n          position=\"static\" \n          color=\"primary\" \n          elevation={0}\n          sx={{\n            background: 'linear-gradient(45deg, #000000 30%, #2C2C2C 90%)',\n            height: '64px',\n            position: 'relative',\n          }}\n        >\n          <Toolbar sx={{ \n            justifyContent: 'center',\n            height: '100%',\n            position: 'relative',\n          }}>\n            <Sidebar />\n            <Typography \n              variant=\"h5\" \n              component=\"div\" \n              sx={{ \n                fontWeight: 600,\n                letterSpacing: '1px',\n                color: '#E8E8E8',\n                textShadow: '0 2px 4px rgba(0,0,0,0.2)',\n                textTransform: 'uppercase',\n              }}\n            >\n              Xpress AI\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <Container maxWidth=\"xl\" sx={{ mt: 4, mb: 4 }}>\n          <Grid container spacing={3}>\n            {/* Top Row - Account Tracker */}\n            <Grid item xs={12}>\n              <AccountTracker />\n            </Grid>\n\n            {/* Main Content */}\n            <Grid container item spacing={3}>\n              {/* Tracked Accounts List */}\n              <Grid item xs={12} md={9}>\n                <TrackedAccountsList onAddToQueue={handleAddToQueue} />\n              </Grid>\n\n              {/* Reply Queue - Always visible */}\n              <Grid item xs={12} md={3}>\n                <ReplyQueue queuedReplies={queuedReplies} />\n              </Grid>\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}