{"ast":null,"code":"var _jsxFileName = \"/Users/sanketgajera/Projects/XpressAI/client/src/components/Dashboard/TwitterTester.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TwitterTester = () => {\n  _s();\n  const [tweetText, setTweetText] = useState('');\n  const [replyToId, setReplyToId] = useState('');\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState(null);\n  const postTweet = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/twitter/tweet', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: tweetText,\n          replyToId: replyToId || null\n        })\n      });\n      const data = await response.json();\n      if (data.error) throw new Error(data.error);\n      setResult(data);\n    } catch (error) {\n      console.error('Error:', error);\n      setResult({\n        error: error.message\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const testTwitterConnection = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/twitter/test');\n      const data = await response.json();\n      setConnectionStatus(data);\n    } catch (error) {\n      console.error('Error:', error);\n      setConnectionStatus({\n        success: false,\n        error: error.message\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"twitter-tester\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test Twitter Integration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: testTwitterConnection,\n      disabled: loading,\n      className: \"test-connection-btn\",\n      children: \"Test Twitter Connection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), connectionStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connection-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Connection Test Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(connectionStatus, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Tweet Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: tweetText,\n        onChange: e => setTweetText(e.target.value),\n        placeholder: \"Enter tweet text...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Reply to Tweet ID (optional):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: replyToId,\n        onChange: e => setReplyToId(e.target.value),\n        placeholder: \"Enter tweet ID to reply to...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: postTweet,\n      disabled: loading || !tweetText,\n      children: loading ? 'Posting...' : 'Post Tweet'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(result, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(TwitterTester, \"wP+aEb5Pc9Bx2FPfpUMN3PLWvsY=\");\n_c = TwitterTester;\nexport default TwitterTester;\nvar _c;\n$RefreshReg$(_c, \"TwitterTester\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TwitterTester","_s","tweetText","setTweetText","replyToId","setReplyToId","result","setResult","loading","setLoading","connectionStatus","setConnectionStatus","postTweet","response","fetch","method","headers","body","JSON","stringify","text","data","json","error","Error","console","message","testTwitterConnection","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","value","onChange","e","target","placeholder","type","_c","$RefreshReg$"],"sources":["/Users/sanketgajera/Projects/XpressAI/client/src/components/Dashboard/TwitterTester.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst TwitterTester = () => {\n  const [tweetText, setTweetText] = useState('');\n  const [replyToId, setReplyToId] = useState('');\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState(null);\n\n  const postTweet = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/twitter/tweet', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          text: tweetText,\n          replyToId: replyToId || null \n        }),\n      });\n\n      const data = await response.json();\n      if (data.error) throw new Error(data.error);\n      \n      setResult(data);\n    } catch (error) {\n      console.error('Error:', error);\n      setResult({ error: error.message });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const testTwitterConnection = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/twitter/test');\n      const data = await response.json();\n      setConnectionStatus(data);\n    } catch (error) {\n      console.error('Error:', error);\n      setConnectionStatus({ success: false, error: error.message });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"twitter-tester\">\n      <h2>Test Twitter Integration</h2>\n      <button \n        onClick={testTwitterConnection}\n        disabled={loading}\n        className=\"test-connection-btn\"\n      >\n        Test Twitter Connection\n      </button>\n      {connectionStatus && (\n        <div className=\"connection-status\">\n          <h3>Connection Test Result:</h3>\n          <pre>{JSON.stringify(connectionStatus, null, 2)}</pre>\n        </div>\n      )}\n      <div className=\"input-group\">\n        <label>Tweet Text:</label>\n        <textarea\n          value={tweetText}\n          onChange={(e) => setTweetText(e.target.value)}\n          placeholder=\"Enter tweet text...\"\n        />\n      </div>\n      <div className=\"input-group\">\n        <label>Reply to Tweet ID (optional):</label>\n        <input\n          type=\"text\"\n          value={replyToId}\n          onChange={(e) => setReplyToId(e.target.value)}\n          placeholder=\"Enter tweet ID to reply to...\"\n        />\n      </div>\n      <button \n        onClick={postTweet}\n        disabled={loading || !tweetText}\n      >\n        {loading ? 'Posting...' : 'Post Tweet'}\n      </button>\n      {result && (\n        <div className=\"result\">\n          <h3>Result:</h3>\n          <pre>{JSON.stringify(result, null, 2)}</pre>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TwitterTester; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}