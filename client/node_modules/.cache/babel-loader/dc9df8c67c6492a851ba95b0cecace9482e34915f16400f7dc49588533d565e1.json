{"ast":null,"code":"var _jsxFileName = \"/Users/sanketgajera/Projects/XpressAI/client/src/components/Dashboard/ReplyQueue.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Paper, Typography, List, ListItem, Card, CardContent, Box, Button, Chip, Divider } from '@mui/material';\nimport { Send as SendIcon, Schedule as ScheduleIcon } from '@mui/icons-material';\nimport XIcon from '../Icons/XIcon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReplyQueue = ({\n  queuedReplies = []\n}) => {\n  _s();\n  const [sending, setSending] = useState(new Set());\n  const handleSendReply = async replyId => {\n    setSending(prev => new Set([...prev, replyId]));\n    // TODO: Implement actual sending\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    setSending(prev => {\n      const next = new Set(prev);\n      next.delete(replyId);\n      return next;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 3,\n      borderRadius: 2,\n      bgcolor: 'background.paper',\n      height: '85vh',\n      overflow: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(ScheduleIcon, {\n        fontSize: \"small\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), \"Reply Queue\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), queuedReplies.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        textAlign: 'center',\n        py: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        children: \"No replies queued\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(List, {\n      children: queuedReplies.map(reply => /*#__PURE__*/_jsxDEV(ListItem, {\n        sx: {\n          px: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          variant: \"outlined\",\n          sx: {\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                alignItems: 'center',\n                gap: 1,\n                mb: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(XIcon, {\n                fontSize: \"small\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                children: reply.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                mb: 2\n              },\n              children: [\"Original: \", reply.originalTweet]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              sx: {\n                mb: 2\n              },\n              children: [\"Reply: \", reply.replyText]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Chip, {\n                size: \"small\",\n                label: `Queued: ${new Date(reply.queuedAt).toLocaleString()}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                variant: \"contained\",\n                startIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 34\n                }, this),\n                onClick: () => handleSendReply(reply.id),\n                disabled: sending.has(reply.id),\n                children: sending.has(reply.id) ? 'Sending...' : 'Send Now'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)\n      }, reply.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ReplyQueue, \"CcUIyfk5fopLTqEydHfFyKAMUH8=\");\n_c = ReplyQueue;\nexport default ReplyQueue;\nvar _c;\n$RefreshReg$(_c, \"ReplyQueue\");","map":{"version":3,"names":["React","useState","Paper","Typography","List","ListItem","Card","CardContent","Box","Button","Chip","Divider","Send","SendIcon","Schedule","ScheduleIcon","XIcon","jsxDEV","_jsxDEV","ReplyQueue","queuedReplies","_s","sending","setSending","Set","handleSendReply","replyId","prev","Promise","resolve","setTimeout","next","delete","sx","p","borderRadius","bgcolor","height","overflow","children","variant","gutterBottom","display","alignItems","gap","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","length","textAlign","py","color","map","reply","px","width","mb","username","originalTweet","replyText","justifyContent","size","label","Date","queuedAt","toLocaleString","startIcon","onClick","id","disabled","has","_c","$RefreshReg$"],"sources":["/Users/sanketgajera/Projects/XpressAI/client/src/components/Dashboard/ReplyQueue.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Paper,\n  Typography,\n  List,\n  ListItem,\n  Card,\n  CardContent,\n  Box,\n  Button,\n  Chip,\n  Divider,\n} from '@mui/material';\nimport { Send as SendIcon, Schedule as ScheduleIcon } from '@mui/icons-material';\nimport XIcon from '../Icons/XIcon';\n\nconst ReplyQueue = ({ queuedReplies = [] }) => {\n  const [sending, setSending] = useState(new Set());\n\n  const handleSendReply = async (replyId) => {\n    setSending(prev => new Set([...prev, replyId]));\n    // TODO: Implement actual sending\n    await new Promise(resolve => setTimeout(resolve, 1000));\n    setSending(prev => {\n      const next = new Set(prev);\n      next.delete(replyId);\n      return next;\n    });\n  };\n\n  return (\n    <Paper sx={{ p: 3, borderRadius: 2, bgcolor: 'background.paper', height: '85vh', overflow: 'auto' }}>\n      <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n        <ScheduleIcon fontSize=\"small\" />\n        Reply Queue\n      </Typography>\n\n      {queuedReplies.length === 0 ? (\n        <Box sx={{ textAlign: 'center', py: 3 }}>\n          <Typography color=\"text.secondary\">No replies queued</Typography>\n        </Box>\n      ) : (\n        <List>\n          {queuedReplies.map((reply) => (\n            <ListItem key={reply.id} sx={{ px: 0 }}>\n              <Card variant=\"outlined\" sx={{ width: '100%' }}>\n                <CardContent>\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>\n                    <XIcon fontSize=\"small\" />\n                    <Typography variant=\"subtitle2\">\n                      {reply.username}\n                    </Typography>\n                  </Box>\n                  \n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                    Original: {reply.originalTweet}\n                  </Typography>\n                  \n                  <Typography variant=\"body2\" sx={{ mb: 2 }}>\n                    Reply: {reply.replyText}\n                  </Typography>\n\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                    <Chip \n                      size=\"small\" \n                      label={`Queued: ${new Date(reply.queuedAt).toLocaleString()}`}\n                    />\n                    <Button\n                      size=\"small\"\n                      variant=\"contained\"\n                      startIcon={<SendIcon />}\n                      onClick={() => handleSendReply(reply.id)}\n                      disabled={sending.has(reply.id)}\n                    >\n                      {sending.has(reply.id) ? 'Sending...' : 'Send Now'}\n                    </Button>\n                  </Box>\n                </CardContent>\n              </Card>\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </Paper>\n  );\n};\n\nexport default ReplyQueue; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}