{"ast":null,"code":"var _jsxFileName = \"/Users/sanketgajera/Projects/XpressAI/client/src/components/Dashboard/ReplyTester.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReplyTester = () => {\n  _s();\n  const [tweet, setTweet] = useState('');\n  const [context, setContext] = useState('Be professional and friendly');\n  const [reply, setReply] = useState('');\n  const [loading, setLoading] = useState(false);\n  const generateReply = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/test-reply', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          tweet,\n          context\n        })\n      });\n      const data = await response.json();\n      if (data.error) throw new Error(data.error);\n      setReply(data.reply);\n    } catch (error) {\n      console.error('Error:', error);\n      setReply('Error generating reply');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reply-tester\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test Reply Generation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Tweet:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: tweet,\n        onChange: e => setTweet(e.target.value),\n        placeholder: \"Enter a tweet to reply to...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Context:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: context,\n        onChange: e => setContext(e.target.value),\n        placeholder: \"Enter context for the AI...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateReply,\n      disabled: loading || !tweet,\n      children: loading ? 'Generating...' : 'Generate Reply'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), reply && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generated-reply\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated Reply:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: reply\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ReplyTester, \"wG9FFReDMXzKSAUixxzJp4S0u7M=\");\n_c = ReplyTester;\nexport default ReplyTester;\nvar _c;\n$RefreshReg$(_c, \"ReplyTester\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ReplyTester","_s","tweet","setTweet","context","setContext","reply","setReply","loading","setLoading","generateReply","response","fetch","method","headers","body","JSON","stringify","data","json","error","Error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/sanketgajera/Projects/XpressAI/client/src/components/Dashboard/ReplyTester.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ReplyTester = () => {\n  const [tweet, setTweet] = useState('');\n  const [context, setContext] = useState('Be professional and friendly');\n  const [reply, setReply] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const generateReply = async () => {\n    try {\n      setLoading(true);\n      const response = await fetch('/api/test-reply', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ tweet, context }),\n      });\n\n      const data = await response.json();\n      if (data.error) throw new Error(data.error);\n      \n      setReply(data.reply);\n    } catch (error) {\n      console.error('Error:', error);\n      setReply('Error generating reply');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"reply-tester\">\n      <h2>Test Reply Generation</h2>\n      <div className=\"input-group\">\n        <label>Tweet:</label>\n        <textarea\n          value={tweet}\n          onChange={(e) => setTweet(e.target.value)}\n          placeholder=\"Enter a tweet to reply to...\"\n        />\n      </div>\n      <div className=\"input-group\">\n        <label>Context:</label>\n        <textarea\n          value={context}\n          onChange={(e) => setContext(e.target.value)}\n          placeholder=\"Enter context for the AI...\"\n        />\n      </div>\n      <button \n        onClick={generateReply}\n        disabled={loading || !tweet}\n      >\n        {loading ? 'Generating...' : 'Generate Reply'}\n      </button>\n      {reply && (\n        <div className=\"generated-reply\">\n          <h3>Generated Reply:</h3>\n          <p>{reply}</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ReplyTester; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}