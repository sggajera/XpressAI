{"ast":null,"code":"var _jsxFileName = \"/Users/sanketgajera/Projects/XpressAI/client/src/components/Dashboard/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Box, Container, Grid, Typography, AppBar, Toolbar, Chip } from '@mui/material';\nimport AccountTracker from './AccountTracker';\nimport TrackedAccountsList from './TrackedAccountsList';\nimport ReplyQueue from './ReplyQueue';\nimport { XIcon } from '@heroicons/react/24/outline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [dbStatus, setDbStatus] = useState('Checking...');\n  const [queuedReplies, setQueuedReplies] = useState([]);\n  useEffect(() => {\n    fetch('/api/test-db').then(res => res.json()).then(data => setDbStatus(data.status)).catch(err => setDbStatus('Database connection failed'));\n  }, []);\n  const handleAddToQueue = reply => {\n    setQueuedReplies(prev => [...prev, {\n      id: Date.now(),\n      queuedAt: new Date(),\n      ...reply\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      color: \"primary\",\n      elevation: 0,\n      sx: {\n        background: 'linear-gradient(45deg, #000000 30%, #2C2C2C 90%)'\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        sx: {\n          justifyContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"div\",\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            gap: 2,\n            fontWeight: 600,\n            letterSpacing: '0.5px',\n            color: '#E8E8E8',\n            textShadow: '0 2px 4px rgba(0,0,0,0.2)'\n          },\n          children: [/*#__PURE__*/_jsxDEV(XIcon, {\n            sx: {\n              fontSize: 28\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), \"Xpress AI\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AccountTracker, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 9,\n            children: /*#__PURE__*/_jsxDEV(TrackedAccountsList, {\n              onAddToQueue: handleAddToQueue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(ReplyQueue, {\n              queuedReplies: queuedReplies\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"qoE5Zqj0GcI4nEyI15IBmH4GqIc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Box","Container","Grid","Typography","AppBar","Toolbar","Chip","AccountTracker","TrackedAccountsList","ReplyQueue","XIcon","jsxDEV","_jsxDEV","Dashboard","_s","dbStatus","setDbStatus","queuedReplies","setQueuedReplies","fetch","then","res","json","data","status","catch","err","handleAddToQueue","reply","prev","id","Date","now","queuedAt","sx","flexGrow","children","position","color","elevation","background","justifyContent","variant","component","display","alignItems","gap","fontWeight","letterSpacing","textShadow","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","mt","mb","container","spacing","item","xs","md","onAddToQueue","_c","$RefreshReg$"],"sources":["/Users/sanketgajera/Projects/XpressAI/client/src/components/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Container,\n  Grid,\n  Typography,\n  AppBar,\n  Toolbar,\n  Chip,\n} from '@mui/material';\nimport AccountTracker from './AccountTracker';\nimport TrackedAccountsList from './TrackedAccountsList';\nimport ReplyQueue from './ReplyQueue';\nimport { XIcon } from '@heroicons/react/24/outline';\n\nconst Dashboard = () => {\n  const [dbStatus, setDbStatus] = useState('Checking...');\n  const [queuedReplies, setQueuedReplies] = useState([]);\n\n  useEffect(() => {\n    fetch('/api/test-db')\n      .then(res => res.json())\n      .then(data => setDbStatus(data.status))\n      .catch(err => setDbStatus('Database connection failed'));\n  }, []);\n\n  const handleAddToQueue = (reply) => {\n    setQueuedReplies(prev => [...prev, {\n      id: Date.now(),\n      queuedAt: new Date(),\n      ...reply\n    }]);\n  };\n\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar \n        position=\"static\" \n        color=\"primary\" \n        elevation={0}\n        sx={{\n          background: 'linear-gradient(45deg, #000000 30%, #2C2C2C 90%)',\n        }}\n      >\n        <Toolbar sx={{ justifyContent: 'center' }}>\n          <Typography \n            variant=\"h5\" \n            component=\"div\" \n            sx={{ \n              display: 'flex',\n              alignItems: 'center',\n              gap: 2,\n              fontWeight: 600,\n              letterSpacing: '0.5px',\n              color: '#E8E8E8',\n              textShadow: '0 2px 4px rgba(0,0,0,0.2)',\n            }}\n          >\n            <XIcon sx={{ fontSize: 28 }} />\n            Xpress AI\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Container maxWidth=\"xl\" sx={{ mt: 4, mb: 4 }}>\n        <Grid container spacing={3}>\n          {/* Top Row - Account Tracker */}\n          <Grid item xs={12}>\n            <AccountTracker />\n          </Grid>\n\n          {/* Main Content */}\n          <Grid container item spacing={3}>\n            {/* Tracked Accounts List */}\n            <Grid item xs={12} md={9}>\n              <TrackedAccountsList onAddToQueue={handleAddToQueue} />\n            </Grid>\n\n            {/* Reply Queue - Always visible */}\n            <Grid item xs={12} md={3}>\n              <ReplyQueue queuedReplies={queuedReplies} />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}